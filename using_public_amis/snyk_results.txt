Failed to run the process ...
{
  "meta": {
    "isPrivate": true,
    "isLicensesEnabled": false,
    "policy": "",
    "ignoreSettings": null,
    "projectId": "",
    "org": "y"
  },
  "filesystemPolicy": false,
  "vulnerabilities": [],
  "dependencyCount": 0,
  "licensesPolicy": null,
  "ignoreSettings": null,
  "targetFile": "main.tf",
  "projectName": "project",
  "org": "y",
  "policy": "",
  "isPrivate": true,
  "targetFilePath": "/project/main.tf",
  "packageManager": "terraformconfig",
  "path": "/project",
  "projectType": "terraformconfig",
  "infrastructureAsCodeIssues": [
    {
      "id": "SNYK-CC-TF-130",
      "title": "EC2 instance accepts IMDSv1",
      "type": "terraform",
      "subType": "EC2",
      "severity": "low",
      "isIgnored": false,
      "iacDescription": {
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
      },
      "lineNumber": 93,
      "path": [
        "resource",
        "aws_instance[example_with_ami_from_instance]",
        "metadata_options"
      ]
    },
    {
      "id": "SNYK-CC-TF-130",
      "title": "EC2 instance accepts IMDSv1",
      "type": "terraform",
      "subType": "EC2",
      "severity": "low",
      "isIgnored": false,
      "iacDescription": {
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
      },
      "lineNumber": 80,
      "path": [
        "resource",
        "aws_instance[example_with_copied_ami]",
        "metadata_options"
      ]
    },
    {
      "id": "SNYK-CC-TF-130",
      "title": "EC2 instance accepts IMDSv1",
      "type": "terraform",
      "subType": "EC2",
      "severity": "low",
      "isIgnored": false,
      "iacDescription": {
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
      },
      "lineNumber": 45,
      "path": [
        "resource",
        "aws_instance[example_with_new_ami]",
        "metadata_options"
      ]
    },
    {
      "id": "SNYK-CC-TF-130",
      "title": "EC2 instance accepts IMDSv1",
      "type": "terraform",
      "subType": "EC2",
      "severity": "low",
      "isIgnored": false,
      "iacDescription": {
        "issue": "Instance Metadata Service v2 is not enforced",
        "impact": "Metadata service may be vulnerable to reverse proxy/open firewall misconfigurations and server side request forgery attacks",
        "resolve": "Set `metadata_options.http_tokens` attribute to `required`"
      },
      "lineNumber": 98,
      "path": [
        "resource",
        "aws_instance[public-ubuntu-from-data]",
        "metadata_options"
      ]
    },
    {
      "id": "SNYK-CC-TF-53",
      "title": "Non-Encrypted root block device",
      "type": "terraform",
      "subType": "EC2",
      "severity": "medium",
      "isIgnored": false,
      "iacDescription": {
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`"
      },
      "lineNumber": 93,
      "path": [
        "resource",
        "aws_instance[example_with_ami_from_instance]",
        "root_block_device",
        "encrypted"
      ]
    },
    {
      "id": "SNYK-CC-TF-53",
      "title": "Non-Encrypted root block device",
      "type": "terraform",
      "subType": "EC2",
      "severity": "medium",
      "isIgnored": false,
      "iacDescription": {
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`"
      },
      "lineNumber": 80,
      "path": [
        "resource",
        "aws_instance[example_with_copied_ami]",
        "root_block_device",
        "encrypted"
      ]
    },
    {
      "id": "SNYK-CC-TF-53",
      "title": "Non-Encrypted root block device",
      "type": "terraform",
      "subType": "EC2",
      "severity": "medium",
      "isIgnored": false,
      "iacDescription": {
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`"
      },
      "lineNumber": 45,
      "path": [
        "resource",
        "aws_instance[example_with_new_ami]",
        "root_block_device",
        "encrypted"
      ]
    },
    {
      "id": "SNYK-CC-TF-53",
      "title": "Non-Encrypted root block device",
      "type": "terraform",
      "subType": "EC2",
      "severity": "medium",
      "isIgnored": false,
      "iacDescription": {
        "issue": "The root block device for ec2 instance is not encrypted",
        "impact": "That should someone gain unauthorized access to the data they would be able to read the contents.",
        "resolve": "Set `root_block_device.encrypted` attribute to `true`"
      },
      "lineNumber": 98,
      "path": [
        "resource",
        "aws_instance[public-ubuntu-from-data]",
        "root_block_device",
        "encrypted"
      ]
    }
  ]
}
